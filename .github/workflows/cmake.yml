name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get -qy install software-properties-common
        sudo add-apt-repository ppa:named-data/ppa -y
        sudo apt-get -qq update
        sudo apt-get -y install gcc-10 g++-10 clang-12 lldb-12 lld-12 build-essential \
                                pkg-config cmake python3-pip doxygen libz-dev \
                                libndn-cxx-dev nfd libssl-dev libsodium-dev \
                                liblog4cxx-dev libgtest-dev libfl-dev
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 100
        sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-10 100
        sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-12 100
        sudo update-alternatives --install /usr/bin/lld lld /usr/bin/lld-12 100
        sudo update-alternatives --install /usr/bin/lldb lldb /usr/bin/lldb-12 100

    - name: Install OpenABE
      run: |
        cd ..
        git clone https://github.com/zeutro/openabe.git
        cd openabe
        sudo -E ./deps/install_pkgs.sh
        . ./env

        cd deps/relic
        make
        cd ../..

        NO_DEPS=1 BISON=$(which bison) make
        make test
        sudo -E make install
        cd ../NAC-ABE

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DHAVE_TESTS=True -DBUILD_EXAMPLES=True

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Start NFD
      run: sudo systemctl start nfd.service

    - name: Test
      working-directory: ${{github.workspace}}/build/tests
      env:
        LD_LIBRARY_PATH: /usr/local/lib:$LD_LIBRARY_PATH
        CTEST_OUTPUT_ON_FAILURE: 1
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest
