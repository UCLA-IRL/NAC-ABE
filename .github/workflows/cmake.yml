name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo

jobs:
  ubuntu-build:
    name: ${{ matrix.compiler }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        compiler: [g++-8, g++-9, g++-10, g++-11,
                   clang++-7, clang++-8, clang++-9, clang++-10, clang++-11, clang++-12]
        os: [ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    env:
      CXX: ${{ matrix.compiler }}
      NODE_LABELS: Linux Ubuntu

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get -qy install software-properties-common
        sudo add-apt-repository ppa:named-data/ppa -y
        sudo apt-get -qq update
        sudo apt-get -y install build-essential pkg-config cmake doxygen python3-pip \
                                libndn-cxx-dev nfd libssl-dev libsodium-dev libz-dev \
                                liblog4cxx-dev libgtest-dev libfl-dev
        sudo apt-get -y install $CXX

    - name: Install OpenABE
      run: |
        cd ..
        git clone https://github.com/zeutro/openabe.git
        cd openabe
        sudo -E ./deps/install_pkgs.sh
        . ./env

        cd deps/relic
        make
        cd ../..

        NO_DEPS=1 BISON=$(which bison) make
        make test
        sudo -E make install
        cd ../NAC-ABE

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DHAVE_TESTS=True -DBUILD_EXAMPLES=True

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Start NFD
      run: sudo systemctl start nfd.service

    - name: Test
      working-directory: ${{github.workspace}}/build/tests
      env:
        LD_LIBRARY_PATH: /usr/local/lib:$LD_LIBRARY_PATH
        CTEST_OUTPUT_ON_FAILURE: 1
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest
